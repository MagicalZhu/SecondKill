<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.seckill.dao.SeckillMapper">
    <!--
        减少库存的方法
        int reduceNumber(long seckillId, Date killTime);
        如果在秒杀时间范围内并且商品的数量大于0,那么就将商品的数量减一
    -->
    <update id="reduceNumber">
        UPDATE seckill
        SET number = number-1
        WHERE seckill_id=#{seckillId}
        AND start_time <![CDATA[ <= ]]> #{killTime}
        AND end_time >= #{killTime}
        AND number > 0;
    </update>
    <!--
        根据seckillId(秒杀商品的id)查询商品的
        Seckill queryById(long seckillId);
    -->
    <select id="queryById" resultType="Seckill">
        select seckill_Id,name,number,start_time,end_time,create_time
        from seckill
        Where seckill_Id=#{seckillId}
    </select>
    <!--
        获取所有的商品
        List<Seckill> queryAll(int offset,int limit);
    -->
    <select id="queryAll" resultType="Seckill">
        select seckill_Id,name,number,start_time,end_time,create_time
        from seckill
        order by create_time desc
        limit #{offset},#{limit}
    </select>

    <!--
        调用存储过程执行秒杀
        void killByProcedure(Map<String,Object> paramMap);
    -->
    <select id="killByProcedure" statementType="CALLABLE">
        Call execute_seckill(
          #{seckillId,jdbcType=BIGINT,mode=IN},
          #{phone,jdbcType=BIGINT,mode=IN},
          #{killTime,jdbcType=TIMESTAMP,mode=IN},
          #{result,jdbcType=INTEGER,mode=OUT}
        )
    </select>
</mapper>



























